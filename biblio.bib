@ARTICLE{k3,
  author={Nardelli, Matteo and Cardellini, Valeria and Grassi, Vincenzo and Presti, Francesco Lo},
  journal={IEEE Transactions on Parallel and Distributed Systems}, 
  title={Efficient Operator Placement for Distributed Data Stream Processing Applications}, 
  year={2019},
  volume={30},
  number={8},
  pages={1753-1767},
  keywords={Computational modeling;Quality of service;Search problems;Delays;Optimization;Storms;Distributed data stream processing;geo-distributed systems;heuristics;operator placement;quality of service},
  doi={10.1109/TPDS.2019.2896115}}


@inproceedings{cardellini-optimal_operatorplc,
  author = {Cardellini, Valeria and Grassi, Vincenzo and Lo Presti, Francesco and Nardelli, Matteo},
  title = {Optimal operator placement for distributed stream processing applications},
  year = {2016},
  isbn = {9781450340212},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/2933267.2933312},
  doi = {10.1145/2933267.2933312},
  booktitle = {Proceedings of the 10th ACM International Conference on Distributed and Event-Based Systems},
  pages = {69–80},
  numpages = {12},
  keywords = {optimal placement, distributed data stream processing, QoS},
  location = {Irvine, California},
  series = {DEBS '16}
}

@INPROCEEDINGS{k5,
  author={Pietzuch, P. and Ledlie, J. and Shneidman, J. and Roussopoulos, M. and Welsh, M. and Seltzer, M.},
  booktitle={22nd International Conference on Data Engineering (ICDE'06)}, 
  title={Network-Aware Operator Placement for Stream-Processing Systems}, 
  year={2006},
  volume={},
  number={},
  pages={49-49},
  keywords={Cost function;Filtering;Digital signal processing;Extraterrestrial measurements;Logic;Delay;Intrusion detection;Telecommunication traffic;Filters;Large-scale systems},
  doi={10.1109/ICDE.2006.105}}


@article{k6,
  title = {Distributed data stream processing and edge computing: A survey on resource elasticity and future directions},
  journal = {Journal of Network and Computer Applications},
  volume = {103},
  pages = {1-17},
  year = {2018},
  issn = {1084-8045},
  doi = {https://doi.org/10.1016/j.jnca.2017.12.001},
  url = {https://www.sciencedirect.com/science/article/pii/S1084804517303971},
  author = {Marcos {Dias de Assunção} and Alexandre {da Silva Veith} and Rajkumar Buyya}
}

@inproceedings{k7,
  author = {Aniello, Leonardo and Baldoni, Roberto and Querzoni, Leonardo},
  title = {Adaptive online scheduling in storm},
  year = {2013},
  isbn = {9781450317580},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/2488222.2488267},
  doi = {10.1145/2488222.2488267},
  abstract = {Today we are witnessing a dramatic shift toward a data-driven economy, where the ability to efficiently and timely analyze huge amounts of data marks the difference between industrial success stories and catastrophic failures. In this scenario Storm, an open source distributed realtime computation system, represents a disruptive technology that is quickly gaining the favor of big players like Twitter and Groupon. A Storm application is modeled as a topology, i.e. a graph where nodes are operators and edges represent data flows among such operators. A key aspect in tuning Storm performance lies in the strategy used to deploy a topology, i.e. how Storm schedules the execution of each topology component on the available computing infrastructure.In this paper we propose two advanced generic schedulers for Storm that provide improved performance for a wide range of application topologies. The first scheduler works offline by analyzing the topology structure and adapting the deployment to it; the second scheduler enhance the previous approach by continuously monitoring system performance and rescheduling the deployment at run-time to improve overall performance. Experimental results show that these algorithms can produce schedules that achieve significantly better performances compared to those produced by Storm's default scheduler.},
  booktitle = {Proceedings of the 7th ACM International Conference on Distributed Event-Based Systems},
  pages = {207–218},
  numpages = {12},
  keywords = {cep, distributed event processing, scheduling, storm},
  location = {Arlington, Texas, USA},
  series = {DEBS '13}
}

@INPROCEEDINGS{k8,
  author={Xu, Jielong and Chen, Zhenhua and Tang, Jian and Su, Sen},
  booktitle={2014 IEEE 34th International Conference on Distributed Computing Systems}, 
  title={T-Storm: Traffic-Aware Online Scheduling in Storm}, 
  year={2014},
  volume={},
  number={},
  pages={535-544},
  keywords={Storms;Topology;Fasteners;Scheduling;Data processing;Monitoring;Schedules;Big Data;Stream Data Processing;Storm;Scheduling;Resource Management},
  doi={10.1109/ICDCS.2014.61}
}


@book{yoon-multiple-optimization,
  title={Multiple Attribute Decision Making: An Introduction},
  author={Yoon, K. and Hwang, C.L.},
  number={Nr. 104},
  isbn={9780803954861},
  lccn={94045234},
  series={Multiple Attribute Decision Making},
  url={https://books.google.at/books?id=xjgFwAEACAAJ},
  year={1995},
  publisher={SAGE Publications}
}

@Inbook{greedy-first-fit,
author="Garey, M. R.
and Johnson, D. S.",
title="Approximation Algorithms for Bin Packing Problems: A Survey",
bookTitle="Analysis and Design of Algorithms in Combinatorial Optimization",
year="1981",
publisher="Springer Vienna",
address="Vienna",
pages="147--172",
abstract="Bin packing problems, in which one is asked to pack items of various sizes into bins so as to optimize some given objective function, arise in a wide variety of contexts and have been studied extensively during the past ten years, primarily with the goal of finding fast ``approximation algorithms'' that construct near-optimal packings. Beginning with the classical one-dimensional bin packing problem first studied in the early 1970's, we survey the approximation results that have been obtained for this problem and its many variants and generalizations, including recent (unpublished) work that reflects the currently most active areas of bin packing research. Our emphasis is on the worst-case performance guarantees that have been proved, but we also discuss work that has been done on expected performance and behavior ``in practice,'' as well as mentioning some of the many applications of these problems.",
isbn="978-3-7091-2748-3",
doi="10.1007/978-3-7091-2748-3_8",
url="https://doi.org/10.1007/978-3-7091-2748-3_8"
}